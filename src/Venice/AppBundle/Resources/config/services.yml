services:

    # SERVICES #

    venice.app.app_logic:
        class: Venice\AppBundle\Services\AppLogic
        arguments:
          - "@service_container"
          - null # if bool all methods will return the given bool! leave blank or set to null to ensure default behavior

    venice.app.entity_form_matcher:
        class: Venice\AppBundle\Services\EntityFormMatcher
        arguments:
            - "@venice.app.configurator.entity_form"

    venice.app.form_override_handler:
        class: Venice\AppBundle\Services\FormOverrideHandler
        arguments:
            - "@venice.app.configurator.form_override"

    venice.app.entity_override_handler:
        class: Venice\AppBundle\Services\EntityOverrideHandler
        arguments:
            - "@venice.app.configurator.entity_override"

    venice.app.configurator.entity_form:
        class: Venice\AppBundle\Configurators\EntityFormConfigurator
        arguments:
            - "%venice.app.entity_forms%"

    venice.app.configurator.form_override:
        class: Venice\AppBundle\Configurators\FormOverrideConfigurator
        arguments:
            - "%venice.app.forms_override%"

    venice.app.configurator.entity_override:
        class: Venice\AppBundle\Configurators\EntityOverrideConfigurator
        arguments:
            - "%venice.app.entity_override%"

    venice.app.necktie_gateway:
        class: Venice\AppBundle\Services\NecktieGateway
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@router"
            - "@venice.app.necktie_gateway_helper"
            - "@venice.app.necktie_connector"
            - "@venice.app.entity_override_handler"
            - "%necktie_url%"
            - "%necktie_client_id%"
            - "%necktie_client_secret%"
            - "%login_response_route%"

#    todo: Remove
    necktie:
        alias: venice.app.necktie_gateway

    venice.app.necktie_connector:
        class: Venice\AppBundle\Services\NecktieConnector

    venice.app.necktie_gateway_helper:
        class: Venice\AppBundle\Services\NecktieGatewayHelper

    venice.app.form_error_serializer:
        class: Venice\AppBundle\Services\FormErrorSerializer

    venice.app.logout_success_handler:
        class: Venice\AppBundle\Services\LogoutSuccessHandler
        arguments:
            - "@router.default"
            - "%necktie_url%"

    venice.app.buy_url_generator:
        class: Venice\AppBundle\Services\BuyUrlGenerator
        arguments:
            - "@router"
            - "@doctrine.orm.entity_manager"
            - "%necktie_url%"

    venice.app.roles_loader:
        class: Venice\AppBundle\Services\RolesLoader

    venice.app.s3_client:
        class: Aws\S3\S3Client
        factory_class: Aws\S3\S3Client
        factory_method: 'factory'
        arguments:
            -   version: latest
                region: "%amazon_s3_region%"
                credentials:
                      secret: "%amazon_s3_secret%"
                      key: "%amazon_s3_key%"

    venice.app.file_uploader:
        class: Venice\AppBundle\Services\FileUploader
        arguments:
            - "@froala_editor_storage_filesystem"
            - "%amazon_s3_region%"
            - "%amazon_s3_bucket%"

    venice.app.client_secret_provider:
        class: Venice\AppBundle\Services\ClientSecretProvider
        arguments:
            - "%necktie_client_secret%"

    venice.app.monolog_request_processor:
        class: Venice\AppBundle\Services\RequestProcessor
        tags:
            - { name: monolog.processor, method: processRecord }

    venice.app.notification_logger:
        class: Venice\AppBundle\Services\NotificationLogger
        arguments:
            - "@trinity.logger.elastic_log_service"
            - "@trinity.logger.elastic_read_log_service"

    venice.app.notification_unknown_entity_name_strategy:
        class: Venice\AppBundle\Services\UnknownNotificationEntityNameStrategy
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@venice.app.entity_override_handler"

    # EVENT LISTENERS #

    venice.app.backtrace_logger_listener:
        class: Venice\AppBundle\EventListener\BacktraceLoggerListener
        tags:
            - {name: "monolog.logger", channel: "backtrace"}
            - {name: "kernel.event_listener", event: "kernel.exception", method: "onKernelException"}
        arguments:
            - "@logger"

    venice.app.event_listener.kernel_excetpion:
        class: Venice\AppBundle\EventListener\KernelExceptionListener
        arguments:
            - "@router"
            - "%login_route%"
        tags:
            - {name: "kernel.event_listener", event: "kernel.exception", method: "onKernelException", priority: 100}

    venice.app.entity_listener:
        class: Venice\AppBundle\EventListener\EntityListener
        arguments:
            - "@service_container"
        tags:
            - { name: doctrine.event_listener, event: onFlush, priority: 100}

    venice.app.login_listener:
        class: Venice\AppBundle\EventListener\LoginListener
        tags:
            - {name: "kernel.event_listener", event: "app.necktie_login_successful", method: "onSuccessfulLogin", priority: 100}

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default, priority: 100 }
        calls:
            - [ "setAnnotationReader", [ "@annotation_reader" ] ]

    venice.app.notification_listener:
        class: Venice\AppBundle\EventListener\NotificationListener
        arguments:
            - "@trinity.services.price_string_generator"
            - "@doctrine.orm.entity_manager"
            - "@trinity.notification.entity_alias_translator"
            - "@venice.app.entity_override_handler"
            - "@logger"
        tags:
            - {name: "kernel.event_listener", event: "trinity.notifications.changesDone", method: "onChangesDone", priority: 100}
            - {name: "kernel.event_listener", event: "trinity.notifications.beforeDeleteEntity", method: "onBeforeDeleteEntity", priority: 100}
            - {name: "kernel.event_listener", event: "trinity.messages.readMessage", method: "onMessageRead", priority: 100}

    venice.app.doctrine_discriminator_listener:
        class: Venice\AppBundle\EventListener\DoctrineDiscriminatorListener
        arguments:
            - "%venice.app.entity_mapping%"
        tags:
            - { name: doctrine.event_subscriber, connection: default, priority: 100}


    venice_app.logger_user_provider:
        class: Venice\AppBundle\Services\LoggerUserProvider
        arguments:
            - "@doctrine"
            - '@venice.app.entity_override_handler'

    venice.app.logger_ttl_provider:
        class: Venice\AppBundle\Services\LoggerTtlProvider
        arguments:
            - "@trinity.settings"

    # TWIG EXTENSIONS #

    venice.app.twig.extension.human_bool:
        class: Venice\AppBundle\Twig\HumanBoolExtension
        public: false
        tags:
            - { name: twig.extension }

    venice.twig.extension.date:
         class: Twig_Extensions_Extension_Date
         tags:
             - { name: twig.extension }

    venice.twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
          - { name: twig.extension }


# ************   FORMS   ************


    venice.app.form.custom_collection:
        class: Venice\AppBundle\Form\Collection\CollectionType
        tags:
            - { name: form.type, alias: collection }

    venice.app.form.base:
        class: Venice\AppBundle\Form\BaseType
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@venice.app.entity_override_handler"

    venice.app.form.content_in_group:
        class: Venice\AppBundle\Form\Content\ContentInGroupType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.content_product_with_hidden_content:
        class: Venice\AppBundle\Form\ContentProduct\ContentProductTypeWithHiddenContent
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.content_product_with_hidden_product:
        class: Venice\AppBundle\Form\ContentProduct\ContentProductTypeWithHiddenProduct
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.group_content:
        class: Venice\AppBundle\Form\Content\GroupContentType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.html_content:
        class: Venice\AppBundle\Form\Content\HtmlContentType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.mp3_content:
        class: Venice\AppBundle\Form\Content\Mp3ContentType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.pdf_content:
        class: Venice\AppBundle\Form\Content\PdfContentType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.iframe_content:
        class: Venice\AppBundle\Form\Content\IframeContentType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.video_content:
        class: Venice\AppBundle\Form\Content\VideoContentType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.free_product:
        class: Venice\AppBundle\Form\Product\FreeProductType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.standard_product:
        class: Venice\AppBundle\Form\Product\StandardProductType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.user:
        class: Venice\AppBundle\Form\User\UserType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.user.roles:
        class: Venice\AppBundle\Form\User\RolesType
        parent: "venice.app.form.base"
        arguments:
            - "@venice.app.roles_loader"
        tags:
            - { name: form.type }

    venice.app.form.billing_plan:
        class: Venice\AppBundle\Form\BillingPlanType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.blog_article:
        class: Venice\AppBundle\Form\BlogArticleType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.category:
        class: Venice\AppBundle\Form\CategoryType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.tag:
        class: Venice\AppBundle\Form\TagType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.form.product_access:
        class: Venice\AppBundle\Form\ProductAccessType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.notification.form.product_access:
        class: Venice\AppBundle\Form\Notification\ProductAccessType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.notification.form.product:
        class: Venice\AppBundle\Form\Notification\ProductType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.notification.form.user:
        class: Venice\AppBundle\Form\Notification\UserType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.notification.form.billing_plan:
        class: Venice\AppBundle\Form\Notification\BillingPlanType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.notification.form.pay_system:
        class: Venice\AppBundle\Form\Notification\PaySystemType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }

    venice.app.notification.form.pay_system_vendor:
        class: Venice\AppBundle\Form\Notification\PaySystemVendorType
        parent: "venice.app.form.base"
        tags:
            - { name: form.type }